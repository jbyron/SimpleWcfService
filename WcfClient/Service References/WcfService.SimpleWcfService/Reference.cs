//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.WcfService.SimpleWcfService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeWithTimezone", Namespace="http://schemas.datacontract.org/2004/07/SixthImpulse.SimpleWcf.SimpleWcfService")]
    [System.SerializableAttribute()]
    public partial class TimeWithTimezone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TheTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimezoneGmtOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimezoneNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TheTime {
            get {
                return this.TheTimeField;
            }
            set {
                if ((this.TheTimeField.Equals(value) != true)) {
                    this.TheTimeField = value;
                    this.RaisePropertyChanged("TheTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimezoneGmtOffset {
            get {
                return this.TimezoneGmtOffsetField;
            }
            set {
                if ((this.TimezoneGmtOffsetField.Equals(value) != true)) {
                    this.TimezoneGmtOffsetField = value;
                    this.RaisePropertyChanged("TimezoneGmtOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimezoneName {
            get {
                return this.TimezoneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TimezoneNameField, value) != true)) {
                    this.TimezoneNameField = value;
                    this.RaisePropertyChanged("TimezoneName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.SimpleWcfService.ISimpleWcfService")]
    public interface ISimpleWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleWcfService/GetServerDate", ReplyAction="http://tempuri.org/ISimpleWcfService/GetServerDateResponse")]
        System.DateTime GetServerDate(string timezoneName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleWcfService/GetServerDate", ReplyAction="http://tempuri.org/ISimpleWcfService/GetServerDateResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetServerDateAsync(string timezoneName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleWcfService/GetServerDateWithTzInfo", ReplyAction="http://tempuri.org/ISimpleWcfService/GetServerDateWithTzInfoResponse")]
        WcfClient.WcfService.SimpleWcfService.TimeWithTimezone GetServerDateWithTzInfo(string timezoneName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleWcfService/GetServerDateWithTzInfo", ReplyAction="http://tempuri.org/ISimpleWcfService/GetServerDateWithTzInfoResponse")]
        System.Threading.Tasks.Task<WcfClient.WcfService.SimpleWcfService.TimeWithTimezone> GetServerDateWithTzInfoAsync(string timezoneName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISimpleWcfServiceChannel : WcfClient.WcfService.SimpleWcfService.ISimpleWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SimpleWcfServiceClient : System.ServiceModel.ClientBase<WcfClient.WcfService.SimpleWcfService.ISimpleWcfService>, WcfClient.WcfService.SimpleWcfService.ISimpleWcfService {
        
        public SimpleWcfServiceClient() {
        }
        
        public SimpleWcfServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SimpleWcfServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleWcfServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SimpleWcfServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.DateTime GetServerDate(string timezoneName) {
            return base.Channel.GetServerDate(timezoneName);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetServerDateAsync(string timezoneName) {
            return base.Channel.GetServerDateAsync(timezoneName);
        }
        
        public WcfClient.WcfService.SimpleWcfService.TimeWithTimezone GetServerDateWithTzInfo(string timezoneName) {
            return base.Channel.GetServerDateWithTzInfo(timezoneName);
        }
        
        public System.Threading.Tasks.Task<WcfClient.WcfService.SimpleWcfService.TimeWithTimezone> GetServerDateWithTzInfoAsync(string timezoneName) {
            return base.Channel.GetServerDateWithTzInfoAsync(timezoneName);
        }
    }
}
